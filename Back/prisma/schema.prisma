// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  uid String  
  name String 
  surname String
  email String @unique
  password String 
  entry_date DateTime @default(now())
  expire_date DateTime @default(now())
  rol Boolean
  userStatus Boolean
  status Boolean @default(true)

  membership  Membership  @relation(fields: [membershipId], references: [idMembership])
  membershipId   Int

  paystores Paystore[]
  extraActivities UserOnExtraActivity[]
}

model Activity {
  idAct Int @id @default(autoincrement())
  image String
  name String 
  schedule String
  type_activity String
  rating String 
  state Boolean @default(true)
  memberships MembershipOnActivity[]
}

model Membership {
  idMembership Int @id @default(autoincrement())
  levelMembership String 
  price Float
  duration Int
  user User[]
  paystore Paystore[]

  activities MembershipOnActivity[]
}
  
model Paystore {
  idPayment Int @id @default(autoincrement())
  idMembership Int 
  priceTotal Float
  status_payment  String
  idUser Int
  
  extraActivities PaystoreOnExtraActivity[]

  user  User  @relation(fields: [userId], references: [id])
  userId   Int
  
  membership  Membership  @relation(fields: [membershipId], references: [idMembership])
  membershipId   Int
}

model ExtraActivity {
  idExtraAct Int @id @default(autoincrement())
  image String
  name String 
  schedule String
  type_activity String
  rating String
  price Float
  
  paystores PaystoreOnExtraActivity[]
  user UserOnExtraActivity[]
}

model MembershipOnActivity {
  membership Membership @relation(fields: [membershipId], references: [idMembership])
  membershipId Int
  
  activity Activity @relation(fields: [activityId], references: [idAct])
  activityId Int

  @@id([membershipId, activityId])
}

model PaystoreOnExtraActivity {
  paystore Paystore @relation(fields: [paymentId], references: [idPayment])
  paymentId Int
  
  extraActivity ExtraActivity @relation(fields: [extraActivityId], references: [idExtraAct])
  extraActivityId Int

  @@id([paymentId, extraActivityId])
}

model UserOnExtraActivity {
  user User @relation(fields: [userId], references: [id])
  userId Int
  
  extraActivity ExtraActivity @relation(fields: [extraActivityId], references: [idExtraAct])
  extraActivityId Int

  @@id([userId, extraActivityId])
}